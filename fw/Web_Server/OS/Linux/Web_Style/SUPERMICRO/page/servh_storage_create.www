<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
	<META http-equiv="Content-Type" content="text/html; charset=utf-8">
	<META HTTP-EQUIV="Pragma" CONTENT="no_cache">
	<META NAME="ATEN International Co Ltd." CONTENT="(c) ATEN International Co Ltd. 2010">
	<META NAME="Super Micro Computer, Inc." CONTENT="(c) Super Micro Computer, Inc. 2014">
	<title></title>
	<link rel="stylesheet" href="../css/basic.css" type="text/css">
	<script type="text/javascript">document.write("<script type=\"text/javascript\", src = \"../js/lang/" + top.lang_setting + "/lang_str.js\"><\/script>");</script> 
	<script language="javascript" src="../js/utils.js"></script> 
<style type="text/css">  
.fieldset_r
{
	-webkit-box-shadow: 10px 10px 5px #888888;
	-moz-box-shadow: 10px 10px 5px #888888;
    box-shadow: 10px 10px 5px #888888;
}
</style>
<!-- power javascript start -->
<script type="text/javascript">
var mainPage 	= "../cgi/url_redirect.cgi?url_name=health";
var PhysicalHDD_dev    	= new Array();
var max_physical_hdd 	= 0;
var devno=-1;
function LSIReloadPage(originalRequest) {
	if ((originalRequest.readyState == 4) && (originalRequest.status == 200)) {
		Loading(false);
		var response = originalRequest.responseText.replace(/^\s+|\s+$/g,"");
		var xmldoc=GetResponseXML(response);
		if(xmldoc == null)
		{
			SessionTimeout();
			return;
		}
		location.href = '../cgi/url_redirect.cgi?url_name=servh_storage#'+devno;
	}
}
function SendFun() {
	var r = confirm(lang.LANG_SERVER_HEALTH_STORAGE_CONFIRM);
	if (r == true) {
		Loading(true);
		document.getElementById("sb_btn").disabled = true;
		window.document.body.scrollTop = 0;
		window.document.documentElement.scrollTop = 0;
    	var cb = document.getElementById("phyhdd_");
    	var index_str = "";
		var num = 0;
    	while ((cb != null) && (cb.nodeName != 'Element')) {
			if (cb.checked == true) {
				if (index_str.length != 0) {
					index_str += ":";
				}
				index_str += cb.value;
				num++;
			}
			cb = cb.nextSibling;
		}
		var url = '/cgi/ipmi.cgi';
		var pars = 'Add_LSIConfiguration.XML=('+devno+','+document.form0.raid_select.selectedIndex+')&existing=0&span='+document.form0.span_select.value+'&num='+num+'&index='+index_str+'&percentage='+document.form0.percentage.value+'&lds='+document.form0.drive_count.selectedIndex+'&strip='+document.form0.strip_size.selectedIndex+'&name='+document.form0.vdname.value+'&rPolicy='+document.form0.read_policy.selectedIndex+'&wPolicy='+document.form0.write_policy.selectedIndex+'&ioPolicy='+document.form0.io_policy.selectedIndex+'&aPolicy='+document.form0.access_policy.selectedIndex+'&cPolicy='+document.form0.cache_policy.selectedIndex+'&init='+document.form0.init_state.selectedIndex+'&time_stamp='+(new Date());
		var myAjax = new Ajax.Request(
			url,
			{method: 'post',parameters:pars, onComplete: LSIReloadPage}//reigister callback function
			);
	}
}
function GetPhysicalHDDInfo(idx) {
	Loading(true);
	var url = '/cgi/ipmi.cgi';
	var pars = 'Get_PhysicalHDDInfo.XML=('+idx+',0)&time_stamp='+(new Date());
	var myAjax = new Ajax.Request(
		url,
		{method: 'post',parameters:pars, onComplete: PhysicalHDDinfoResp}//reigister callback function
		);
}
function CheckRAID() {
	var percentage = document.form0.percentage.value;
	var r = /^[0-9]*[1-9][0-9]*$/;
	if(r.test(percentage) && (percentage <= 100)) {
		var vdname = document.form0.vdname.value;
		var s = /^[\w\-_ ]*$/;
		if (s.test(vdname) && (vdname.length < 16)) {
			var index = document.form0.raid_select.selectedIndex;
			var checkeditem = 0;
			var cb = document.getElementById("phyhdd_");
    		while ((cb != null) && (cb.nodeName != 'Element')) {
    		    if (cb.checked == true) {
					checkeditem++;
				}
    		    cb = cb.nextSibling;
    		}
			if (index == 0) {
				if (checkeditem == 0) {
					document.getElementById("sb_btn").disabled = true;
				} else {
					document.getElementById("sb_btn").disabled = false;
				}
			} else if (index == 1) {
				if ((checkeditem%2) != 0) {
					document.getElementById("sb_btn").disabled = true;
				} else {
					document.getElementById("sb_btn").disabled = false;
				}
			} else if ((index == 2) || (index == 3)) {
				if (checkeditem < 3) {
					document.getElementById("sb_btn").disabled = true;
				} else {
					document.getElementById("sb_btn").disabled = false;
				}
			} else if (index == 4) {
				if (document.form0.span_select.value == 2) {
					if ((checkeditem < 4) || ((checkeditem%document.form0.span_select.value) != 0)) {
						document.getElementById("sb_btn").disabled = true;
					} else {
						document.getElementById("sb_btn").disabled = false;
					}
				} else {
					if ((checkeditem < 8) || ((checkeditem%document.form0.span_select.value) != 0)) {
						document.getElementById("sb_btn").disabled = true;
					} else {
						document.getElementById("sb_btn").disabled = false;
					}
				}
			} else if ((index == 5) || (index == 6)) {
				if ((checkeditem < 6) || ((checkeditem%document.form0.span_select.value) != 0)) {
					document.getElementById("sb_btn").disabled = true;
				} else {
					document.getElementById("sb_btn").disabled = false;
				}
			} else {
				document.getElementById("sb_btn").disabled = true;
			}
		} else {
			document.getElementById("sb_btn").disabled = true;
		}
	} else {
		document.getElementById("sb_btn").disabled = true;
	}
}
function ClearChecked() {
	document.getElementById("sb_btn").disabled = true;
	document.form0.percentage.value = 100;
	var cb = document.getElementById("phyhdd_");
	while ((cb != null) && (cb.nodeName != 'Element')) {
		cb.checked = false;
		cb = cb.nextSibling;
	}
	var span = document.form0.span_select;
	while (span.length) {
		span.remove(0);
	}
	switch (document.form0.raid_select.selectedIndex) {
		case 5:
		case 6:
		span.options[0] = new Option('3', 3);
		span.options[1] = new Option('4', 4);
		break;
		case 4:
		span.options[0] = new Option('2', 2);
		span.options[1] = new Option('4', 4);
		break;
		default:
		span.options[0] = new Option('1', 1);
		break;
	}
}
function ShowPhysicalHDDinfo() {
	var good_drive = 0;
	for (i=0; i<max_physical_hdd; i++) {
		if ((PhysicalHDD_dev[i][0] == 1) && (PhysicalHDD_dev[i][7] == 0) && (PhysicalHDD_dev[i][13] == 0) && (PhysicalHDD_dev[i][14] == 0)) {
			var checkbox = document.createElement('input');
			checkbox.type = "checkbox";
			checkbox.name = "phyhdd";
			checkbox.value = i;
			checkbox.id = "phyhdd_";
            checkbox.onclick = function() {
                CheckRAID();
            };
			var label = document.createElement('label');
			label.htmlFor = "phyhdd"+i;
			label.className = "Categorytext";
			label.appendChild(document.createTextNode(lang.LANG_SERVER_HEALTH_STORAGE_PHYDRIVE+i+" "+PhysicalHDD_dev[i][3]+" "+PhysicalHDD_dev[i][4]+" - "+PhysicalHDD_dev[i][2]));
			document.getElementById("hddinfo").appendChild(checkbox);
			document.getElementById("hddinfo").appendChild(label);
			document.getElementById("hddinfo").appendChild(document.createElement('br'));
			good_drive++;
		}
	}
	var select = document.form0.raid_select;
	select.options[0] = new Option('RAID0');
	if (good_drive >= 2) {
		select.options[1] = new Option('RAID1');
		if (good_drive >= 3) {
			select.options[2] = new Option('RAID5');
			select.options[3] = new Option('RAID6');
			if (good_drive >= 4) {
				select.options[4] = new Option('RAID10');
				if (good_drive >= 6) {
					select.options[5] = new Option('RAID50');
					select.options[6] = new Option('RAID60');
				}
			}
		}
	}
	var span = document.form0.span_select;
	switch (select.selectedIndex) {
		case 5:
		case 6:
		span.options[0] = new Option('3', 3);
		span.options[1] = new Option('4', 4);
		break;
		case 4:
		span.options[0] = new Option('2', 2);
		span.options[1] = new Option('4', 4);
		break;
		default:
		span.options[0] = new Option('1', 1);
		break;
	}
}
function PhysicalHDDinfoResp(originalRequest) {
	if (originalRequest.readyState == 4 && originalRequest.status == 200) {
		Loading(false);
		var response = originalRequest.responseText.replace(/^\s+|\s+$/g,"");
		var xmldoc=GetResponseXML(response);
		if(xmldoc == null) {
			SessionTimeout();
			return;
		}
		var Root			= xmldoc.documentElement;
   		var HDDIndoNode		= Root.getElementsByTagName('HDDInfo');
   		var HDDNode 		= HDDIndoNode[0].getElementsByTagName('HDD');
   		max_physical_hdd	= HDDIndoNode[0].getAttribute("num");
   		for (i=0; i<max_physical_hdd; i++) { 
   			PhysicalHDD_dev[i] 	    = new Array();
			PhysicalHDD_dev[i][0]   = parseInt(HDDNode[i].getAttribute("status"),16);
   			var temp = parseInt(HDDNode[i].getAttribute("temperature"),16);
   			if (temp == 0 || temp == 255) {
   				PhysicalHDD_dev[i][1]   = "N/A";
   			} else {
   				PhysicalHDD_dev[i][1]   = parseInt(HDDNode[i].getAttribute("temperature"),16)+ " degrees C";
			}
			PhysicalHDD_dev[i][2]   = parseInt(HDDNode[i].getAttribute("CoercedSize"),16)+ " GB";
   			PhysicalHDD_dev[i][3]   = HDDNode[i].getAttribute("Vendor");
   			PhysicalHDD_dev[i][4]   = HDDNode[i].getAttribute("ModelName");
   			PhysicalHDD_dev[i][5]   = HDDNode[i].getAttribute("Revision");
   			PhysicalHDD_dev[i][6]   = parseInt(HDDNode[i].getAttribute("LinkSpeed"),16);
			PhysicalHDD_dev[i][7]   = parseInt(HDDNode[i].getAttribute("fwState"),16);
   			PhysicalHDD_dev[i][8]   = parseInt(HDDNode[i].getAttribute("OtherErrCount"),16);
   			PhysicalHDD_dev[i][9]   = parseInt(HDDNode[i].getAttribute("PredFailCount"),16);
   			PhysicalHDD_dev[i][10]  = parseInt(HDDNode[i].getAttribute("MediaErrCount"),16);
   			PhysicalHDD_dev[i][11]  = parseInt(HDDNode[i].getAttribute("LastPredFailEventSeqNum"),16);
   			PhysicalHDD_dev[i][12]  = parseInt(HDDNode[i].getAttribute("enclosureID"),16);
			PhysicalHDD_dev[i][13]  = HDDNode[i].getAttribute("Foreign");
			PhysicalHDD_dev[i][14]  = HDDNode[i].getAttribute("Erase");
		}
		ShowPhysicalHDDinfo();
	}
}
function stopRKey() {
	if (event.keyCode == 13) 
	{        
		event.cancelBubble = true;
		event.returnValue = false;
	}
}
function PageInit() {
	$(TAG_ALERT)
	$(TAG_MAINPAGE)
	var param = window.location.hash.split("#");
	if (param[1].length != 0) {
		devno = param[1];
		document.getElementById("devinfo").innerHTML = "Device"+devno+": Unconfigured good drive";
		GetPhysicalHDDInfo(devno);
	} else {
		location.href = '../cgi/url_redirect.cgi?url_name=servh_storage';
	}
}
</script>
<!-- power javascrddipt start -->
</head>
<body onload="PageInit()">
	<span class="LoadingStyle" id="loading"></span>
    <table border="0" cellpadding="0" cellspacing="0" style="width: 100%;">
        <tr><td width="20px"><img src="../images/arrow_red.gif" border="0" class="redarrow"></td><td><div class="mtitle"><script>document.writeln(lang.LANG_SERVER_HEALTH_STORAGE_CAPTION)</script></div></td></tr>
        <tr><td><br></td><td><br></td></tr>
        <tr><td></td>
            <td><table class="boxSection"><tr><td><div class="textA"><script>document.writeln(lang.LANG_SERVER_HEALTH_STORAGE_DESC)</script></div></td><tr></table></td>
        </tr>
        <tr><td>&nbsp;</td><td>&nbsp;</td></tr>
        <tr><td></td>
			<td>
			<form name="form0">
			<p><select name="raid_select" onchange="ClearChecked()"><option selected value="0"></option></select></p>
			<p class="Categorytext">PD per Span:&nbsp;<select name="span_select" onchange="CheckRAID()"><option selected value="0"></option></select></p>
			<fieldset class="fieldset_r" style="width:380px;height:150px;">
			<legend id="devinfo" class="labelhead"></legend>
			<div id="hddinfo" style="width:100%;height:90%;overflow:auto;"></div>
			</fieldset><br>
			<p class="Categorytext">Enter % size (positive integer) to be used:&nbsp;<input type="text" name="percentage" style="width:30px" value="100" onchange="CheckRAID()" onkeydown="stopRKey()"/></p>
			<p class="Categorytext">New Logical Drive Count(Max LDs: 16):&nbsp;<select name="drive_count"><option selected="selected">1</option><option>2</option><option>3</option><option>4</option><option>5</option><option>6</option><option>7</option><option>8</option><option>9</option><option>10</option><option>11</option><option>12</option><option>13</option><option>14</option><option>15</option><option>16</option></select></p>
			<p class="Categorytext">Strip size per DDF(Default: 256K):&nbsp;<select name="strip_size"><option>64K</option><option>128K</option><option selected="selected">256K</option><option>512K</option><option>1024K</option></select></p>
			<p class="Categorytext">VD name(alphabet or number(Max Chars: 15; Keep blank for none)):&nbsp;<input type="text" name="vdname" style="width:180px" onchange="CheckRAID()" onkeydown="stopRKey()"/></p>
			<p class="Categorytext">LD Read Policy(Default: Adaptive Read Ahead):&nbsp;<select name="read_policy"><option>Read Ahead</option><option>No Read Ahead</option><option selected="selected">Adaptive Read Ahead</option></select></p>
			<p class="Categorytext">LD Write Policy(Default: Write Back):&nbsp;<select name="write_policy"><option>Write Through</option><option selected="selected">Write Back</option><option>Write back with BBU</option></select></p>
			<p class="Categorytext">LD IO Policy(Default: Direct IO):&nbsp;<select name="io_policy"><option selected="selected">Direct IO</option><option>Cached IO</option></select></p>
			<p class="Categorytext">Access Policy(Default: Read Write):&nbsp;<select name="access_policy"><option selected="selected">Read Write</option><option>Read Only</option><option>Blocked</option></select></p>
			<p class="Categorytext">Disk Cache Policy(Default: Unchanged):&nbsp;<select name="cache_policy"><option selected="selected">Unchanged</option><option>Enable</option><option>Disable</option></select></p>
			<p class="Categorytext">Init State(Default: No Init):&nbsp;<select name="init_state"><option selected="selected">No Init</option><option>Quick Init</option><option>Full Init</option></select></p>
			<input id="sb_btn" type="button" value="Submit" disabled="disabled" onclick="SendFun()"/>
			</form>
			</td></tr>
	</table>
</body>
</html>
