<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<META http-equiv="Content-Type" content="text/html; charset=utf-8">
	<META HTTP-EQUIV="Pragma" CONTENT="no_cache">
	<META NAME="ATEN International Co Ltd." CONTENT="(c) ATEN International Co Ltd. 2010">
	<META NAME="Super Micro Computer, Inc." CONTENT="(c) Super Micro Computer, Inc. 2014">
	<title></title>
	<!-- common css -->
	<link rel="stylesheet" href="../css/basic.css" type="text/css">
	<link rel="stylesheet" href="../css/grid/listgrid.css" type="text/css">
	<!--common javascipt library -->
	<script language="javascript" src="../js/grid/LWbase.js"></script> 
	<script language="javascript" src="../js/grid/LWfactory.js"></script> 
	<script language="javascript" src="../js/grid/LWdatagrid.js"></script> 
	<script language="javascript" src="../js/utils.js"></script>
	<script type="text/javascript">document.write("<script type=\"text/javascript\", src = \"../js/lang/" + top.lang_setting + "/lang_str.js\"><\/script>");</script>
	<script type="text/javascript">
	/*
	global variables
	*/
	var mainPage = "../cgi/url_redirect.cgi?url_name=configuration";
	var ssl_redirect_init_state;
	var http_init_state;
	var https_init_state;
	var http_init_port;
	var https_init_port;
	function PageInit()
	{
		// Get multi-language string
		SaveOBJ = document.getElementById("saveBtn");
		SaveOBJ.value = lang.LANG_CONF_PORT_SAVE;
		HttpPortOBJ = document.getElementById("WebSrvPort");
		HttpsPortOBJ = document.getElementById("WebSrvSSLPort");
		IKvmPortOBJ = document.getElementById("IKVMPort");
		VMPortOBJ = document.getElementById("VMPort");
        SSHPortOBJ = document.getElementById("SSHPort");
        WsmanPortOBJ = document.getElementById("WsmanPort");
        SNMPPortOBJ = document.getElementById("SNMPPort");   

		WebSrvCheckOBJ =document.getElementById("WebSrvCheck");
		WebSrvSSLCheckOBJ =document.getElementById("WebSrvSSLCheck");
		IKVMCheckOBJ = document.getElementById("IKVMCheck");
		VMCheckOBJ = document.getElementById("VMCheck");
		SSHCheckOBJ = document.getElementById("SSHCheck"); 
		WsmanCheckOBJ = document.getElementById("WsmanCheck");
		RedirectCheckOBJ = document.getElementById("RedirectCheck");
        SNMPCheckOBJ = document.getElementById("SNMPCheck"); 


		$(TAG_ALERT)
		$(TAG_MAINPAGE)	
		GetPortConfig();
	}
	function GetPortConfig()
	{	
		Loading(true);
		var url = '/cgi/ipmi.cgi';
		var pars = 'GETPORTSINFO.XML=(0,0)&time_stamp='+(new Date()) ;
		var myAjax = new Ajax.Request(
	                 url,
	                 {method: 'post',parameters:pars, onComplete: GetPortConfigHandler}//reigister callback function
	                 );
	}
	function CheckPortValue(PortObject)
	{
		var Value = PortObject.value;
		if ( PortObject != HttpPortOBJ && HttpPortOBJ.value == Value )
		{
			alert(lang.LANG_CONF_PORTUSE_WARNING);
			return -1;
		}
		if ( PortObject != HttpsPortOBJ && HttpsPortOBJ.value == Value )
		{
			alert(lang.LANG_CONF_PORTUSE_WARNING);
			return -1;
		}
		if ( PortObject != IKvmPortOBJ && IKvmPortOBJ.value == Value )
		{
			alert(lang.LANG_CONF_PORTUSE_WARNING);
			return -1;
		}
		if ( PortObject != VMPortOBJ && VMPortOBJ.value == Value )
		{
			alert(lang.LANG_CONF_PORTUSE_WARNING);
			return -1;
		}

        if ( PortObject != SSHPortOBJ && SSHPortOBJ.value == Value )
        {
            alert(lang.LANG_CONF_PORTUSE_WARNING);
            return -1;
        }
        if ( PortObject != WsmanPortOBJ && WsmanPortOBJ.value == Value )
        {
            alert(lang.LANG_CONF_PORTUSE_WARNING);
            return -1;
        }
        if ( PortObject != SNMPPortOBJ && SNMPPortOBJ.value == Value )
        {
            alert(lang.LANG_CONF_PORTUSE_WARNING);
            return -1;
        }


		if (!port_number_check(Value)){
		    alert(lang.LANG_CONF_PORTERR_WARNING);
        	return -1;
    	}
		return 0;
	}
	function GetPortConfigHandler(originalRequest)
	{
		if ((originalRequest.readyState == 4) && (originalRequest.status == 200))
		{
			Loading(false);
			var response = originalRequest.responseText.replace(/^\s+|\s+$/g,"");
			var xmldoc = GetResponseXML(response);
			if(xmldoc == null)
			{
				SessionTimeout();
				return;
			}
			var IPMIRoot = xmldoc.documentElement;
			var PortInfo = IPMIRoot.getElementsByTagName("PORT_INFO");
			HttpPortValue = PortInfo[0].getAttribute("HTTP_PORT");
			HttpsPortValue = PortInfo[0].getAttribute("HTTPS_PORT");
			IKvmPortValue = PortInfo[0].getAttribute("IKVM_PORT");
			VMPortValue  = PortInfo[0].getAttribute("VM_PORT");
			SSHPortValue	= PortInfo[0].getAttribute("SSH_PORT");
			WSMANPortValue	= PortInfo[0].getAttribute("WSMAN_PORT");
            SNMPPortValue    = PortInfo[0].getAttribute("SNMP_PORT");

			http_init_port = HttpPortValue;
			https_init_port = HttpsPortValue;

			HttpPortOBJ.value = HttpPortValue;
			HttpsPortOBJ.value = HttpsPortValue;
			IKvmPortOBJ.value = IKvmPortValue;
			VMPortOBJ.value  = VMPortValue;
			SSHPortOBJ.value  = SSHPortValue;
			WsmanPortOBJ.value  = WSMANPortValue;
            SNMPPortOBJ.value  = SNMPPortValue;

			if(PortInfo[0].getAttribute("HTTP_SERVICE")=="1") {
	            WebSrvCheckOBJ.checked = true;
	        } else {
	            WebSrvCheckOBJ.checked = false;
			}
			http_init_state = WebSrvCheckOBJ.checked;
	            
			if(PortInfo[0].getAttribute("HTTPS_SERVICE")=="1")
		    {
	            WebSrvSSLCheckOBJ.checked = true;
	 			if(PortInfo[0].getAttribute("SSL_REDIRECT")=="1") {
		            RedirectCheckOBJ.checked = true;
		        } else {
		            RedirectCheckOBJ.checked = false;
				}
			}
	        else
	        {
	            WebSrvSSLCheckOBJ.checked = false;
	            RedirectCheckOBJ.checked = false;
	        }
			ssl_redirect_init_state = RedirectCheckOBJ.checked;
			https_init_state 	 	= WebSrvSSLCheckOBJ.checked;
 			if(PortInfo[0].getAttribute("VM_SERVICE")=="1") {
	            VMCheckOBJ.checked = true;
	        } else {
	            VMCheckOBJ.checked = false;
			}
			if(PortInfo[0].getAttribute("IKVM_SERVICE")=="1") {
	            IKVMCheckOBJ.checked = true;
	        } else {
	            IKVMCheckOBJ.checked = false;
	            VMCheckOBJ.checked = false;
            } 
 			if(PortInfo[0].getAttribute("SSH_SERVICE")=="1") {
	            SSHCheckOBJ.checked = true;
	        } else {
	            SSHCheckOBJ.checked = false;
			}
 			if(PortInfo[0].getAttribute("WSMAN_SERVICE")=="1") {
	            WsmanCheckOBJ.checked = true;
	        } else {
	            WsmanCheckOBJ.checked = false;
			}
            if(PortInfo[0].getAttribute("SNMP_SERVICE")=="1") {
                SNMPCheckOBJ.checked = true;
            } else {
                SNMPCheckOBJ.checked = false;
            }

			HttpPortOBJ.onblur = function()
			{
    			if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
    			}
			}
			HttpsPortOBJ.onblur = function()
			{
				if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
    			}
			}
			IKvmPortOBJ.onblur = function()
			{
				if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
    			}
			}
			VMPortOBJ.onblur = function()
			{
				if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
    			}
			}
			SSHPortOBJ.onblur = function()
			{
				if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
				}
			}
			WsmanPortOBJ.onblur = function()
			{
				if ( CheckPortValue(this) == -1)
    			{
    			 	this.focus();
    			 	return;
    			}
			}
            SNMPPortOBJ.onblur = function()
            {
                if ( CheckPortValue(this) == -1)
                {
                    this.focus();
                    return;
                }
            }
		}
	}
	function checkboxStatusToValue(ObjSrvCheck)
	{
        if(ObjSrvCheck.checked == true) {
            ObjSrvCheck.value = 1;
        } else {
            ObjSrvCheck.value = 0;
		}
	}
	function ssl_redirection_check()
	{
		if ((RedirectCheckOBJ.checked == true) && (WebSrvSSLCheckOBJ.checked != true)) {
			alert (lang.LANG_CONF_PORT_HTTPS_WARNING);
			WebSrvSSLCheckOBJ.checked = true;
			return 1; 
		}
		return 0;
	}	
	function vm_check(){
		if(IKVMCheckOBJ.checked==false){	//If iKVM is disable, VM must be disable
			if (VMCheckOBJ.checked)
				alert (lang.LANG_CONF_PORT_DISVM_WARNING);
			VMCheckOBJ.checked= false;
			VMCheckOBJ.disabled = true;
			return 1;
		} else {
			VMCheckOBJ.disabled = false;
		}
		return 0;
	}
	function SavePortConfig()
	{
		if (!port_number_check(HttpPortOBJ.value) || !port_number_check(HttpPortOBJ.value) ||
			!port_number_check (IKvmPortOBJ.value)	|| !port_number_check(VMPortOBJ.value) || 
			!port_number_check (SSHPortOBJ.value)	|| !port_number_check(WsmanPortOBJ.value) ||
            !port_number_check (SNMPPortOBJ.value)){
			alert(lang.LANG_CONF_PORTERR_WARNING);
			return;
		}
		if (ssl_redirection_check()) {
			return;
		}
		Loading(true);

        checkboxStatusToValue(WebSrvCheckOBJ);
        checkboxStatusToValue(WebSrvSSLCheckOBJ);
        checkboxStatusToValue(IKVMCheckOBJ);
        checkboxStatusToValue(VMCheckOBJ);
        checkboxStatusToValue(SSHCheckOBJ);
        checkboxStatusToValue(WsmanCheckOBJ);
        checkboxStatusToValue(SNMPCheckOBJ);
        checkboxStatusToValue(RedirectCheckOBJ);

	    var ajax_url = '/cgi/op.cgi';
	    var ajax_param= 'op=config_port' + '&HTTP_PORT=' + HttpPortOBJ.value +'&HTTPS_PORT=' + HttpsPortOBJ.value + '&IKVM_PORT=' 
	    + IKvmPortOBJ.value + '&VM_PORT=' + VMPortOBJ.value + '&SSH_PORT=' + SSHPortOBJ.value + '&WSMAN_PORT=' + WsmanPortOBJ.value
        + '&SNMP_PORT=' + SNMPPortOBJ.value + '&HTTP_SERVICE=' + WebSrvCheckOBJ.value +'&HTTPS_SERVICE=' + WebSrvSSLCheckOBJ.value
        + '&IKVM_SERVICE=' + IKVMCheckOBJ.value + '&VM_SERVICE=' + VMCheckOBJ.value + '&SSH_SERVICE=' + SSHCheckOBJ.value 
        + '&SNMP_SERVICE=' + SNMPCheckOBJ.value + '&WSMAN_SERVICE=' + WsmanCheckOBJ.value 
        + '&SSL_REDIRECT=' + RedirectCheckOBJ.value + '&time_stamp='+(new Date());

	    var ajax_req = new Ajax.Request(
	                 ajax_url,
	                 {method: 'post',parameters:ajax_param, onComplete: SavePortConfigHandler}//reigister callback function
	                 );
	}
	function redirect_page(){
		var host_addr;
		var host_tmp  = location.hostname;
		if((host_tmp.indexOf("[", 0) == -1) && (host_tmp.indexOf(":", 0) != -1) && (host_tmp.indexOf(".", 0) == -1)) {
			host_addr = "[" + host_tmp + "]";
		} else {
			host_addr = host_tmp;
		}
		var redirect_url,is_https;

		if (window.location.protocol == "http:" ) {
			if ((RedirectCheckOBJ.checked == true) || (WebSrvCheckOBJ.checked == false)) {
				is_https=1;
			} else {
				is_https=0;
			}
		} else {
			if (WebSrvSSLCheckOBJ.checked == false) {
				is_https=0;
			} else {
				is_https=1;
			}
		}
		if (is_https) {
			redirect_url ="https://" + host_addr + ":" + HttpsPortOBJ.value + "/";
		} else {
			redirect_url ="http://" + host_addr  + ":" + HttpPortOBJ.value + "/";
		}
		Loading(false);
		top.location   = redirect_url;
	}
	function SavePortConfigHandler(originalRequest)
	{
		if ((originalRequest.readyState == 4) && (originalRequest.status == 200))
		{
			var response = originalRequest.responseText.replace(/^\s+|\s+$/g,"");
			var xmldoc = GetResponseXML(response);
			if(xmldoc == null)
			{
				SessionTimeout();
				return;
			}
			var IPMIRoot = xmldoc.documentElement;
			var PortStatus = IPMIRoot.getElementsByTagName("PORTCONF_STATUS");
			Loading(false);
			if (PortStatus[0].getAttribute("HTTP_PORT_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		HttpPortOBJ.focus();
        		return;	
			}
			if ( PortStatus[0].getAttribute("HTTPS_PORT_IN_USE_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		HttpsPortOBJ.focus();
        		return;
			}
			if ( PortStatus[0].getAttribute("IKVM_PORT_IN_USE_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		IKvmPortOBJ.focus();
        		return;
			}
			if ( PortStatus[0].getAttribute("VM_PORT_IN_USE_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		VMPortOBJ.focus();
        		return;
			}
			if ( PortStatus[0].getAttribute("SSH_PORT_IN_USE_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		SSHPortOBJ.focus();
        		return;
			}
			if ( PortStatus[0].getAttribute("WSMAN_PORT_IN_USE_STATUS") == "1")
			{
				alert(lang.LANG_CONF_PORTUSE_WARNING);
        		WsmanPortOBJ.focus();
        		return;
			}
            if ( PortStatus[0].getAttribute("SNMP_PORT_IN_USE_STATUS") == "1")
            {
                alert(lang.LANG_CONF_PORTUSE_WARNING);
                SNMPPortOBJ.focus();
                return;
            }

			Loading(true);
			if(PortStatus[0].getAttribute("HTTP_SERVICE")=="1") {
	            WebSrvCheckOBJ.checked = true;
	        } else {
	            WebSrvCheckOBJ.checked = false;
			}
			if(PortStatus[0].getAttribute("HTTPS_SERVICE")=="1") {
	            WebSrvSSLCheckOBJ.checked = true;
	 			if(PortStatus[0].getAttribute("SSL_REDIRECT")=="1") {
		            RedirectCheckOBJ.checked = true;
		        } else {
		            RedirectCheckOBJ.checked = false;
				}
			} else {
				WebSrvSSLCheckOBJ.checked = false;
				RedirectCheckOBJ.checked = false;
			}
 			if(PortStatus[0].getAttribute("VM_SERVICE")=="1") {
				VMCheckOBJ.checked = true;
			} else {
	            VMCheckOBJ.checked = false;
			}
			if(PortStatus[0].getAttribute("IKVM_SERVICE")=="1") {
				IKVMCheckOBJ.checked = true;
	        } else {
				IKVMCheckOBJ.checked = false;
				VMCheckOBJ.checked = false;
            }            
 			if(PortStatus[0].getAttribute("SSH_SERVICE")=="1") {
				SSHCheckOBJ.checked = true;
	        } else {
				SSHCheckOBJ.checked = false;
			}
 			if(PortStatus[0].getAttribute("WSMAN_SERVICE")=="1") {
				WsmanCheckOBJ.checked = true;
	        } else {
				WsmanCheckOBJ.checked = false;
			}
            if(PortStatus[0].getAttribute("SNMP_SERVICE")=="1") {
                SNMPCheckOBJ.checked = true;
            } else {
                SNMPCheckOBJ.checked = false;
            }

			if ((http_init_port != HttpPortOBJ.value) || 
				(https_init_port != HttpsPortOBJ.value) ||
				(http_init_state != WebSrvCheckOBJ.checked) ||
				(https_init_state != WebSrvSSLCheckOBJ.checked) ||
				(ssl_redirect_init_state != RedirectCheckOBJ.checked)){
				setTimeout("redirect_page();", 10000);
				alert (lang.LANG_CONF_PORT_REDIRECT_WARNING);
			} else {
				Loading(false);
			}
		}
	}
	</script>
</head>
<body onload="PageInit()">
	<span class="LoadingStyle" id="loading"></span>
	<table border="0" cellpadding="0" cellspacing="0" style="width: 100%">
        <tr><td width="20px"><img src="../images/arrow_red.gif" border="0" class="redarrow"></td>
        	<td>
        		<div class="mtitle">
        			<script>document.writeln(lang.LANG_CONF_PORT_CAPTION)</script>
        		</div>
        	</td>
        	<td><div class="LoadingStyle" id="loading"></div></td>
        </tr>
        <tr>
        	<td><br></td>
        	<td><br></td>
        </tr>
        <tr>
        	<td></td>
            <td>
                <table class="boxSection"><tr><td><div class="textA">
                	<script>document.writeln(lang.LANG_CONF_PORT_DESC)</script></div></td><tr>
                </table>
            </td>
        </tr>
        <tr>
        	<td><br></td>
        	<td><br></td>
        </tr>
        <tr>
        	<td></td>
        	<td>
        		<!-- below area is needed to modify by yourself -->
        	  	<form id="form">
        	  	<table border="0">
					<tr>
						<td><input type="checkbox" name="WebSrvCheck" id="WebSrvCheck" $(TAG_DISABLE)/>
						<span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_WEB)</script></span>
						<td><input type="text" name="WebSrvPort" id="WebSrvPort" $(TAG_DISABLE)/></td></td>
					</tr>
					<tr>
                        <td><input type="checkbox" name="WebSrvSSLCheck" id="WebSrvSSLCheck" onclick="ssl_redirection_check()" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_WEBSSL)</script></span>
                        <td><input type="text" name="WebSrvSSLPort" id="WebSrvSSLPort" $(TAG_DISABLE)/></td></td>
					</tr>
					<tr>
                        <td><input type="checkbox" name="IKVMCheck" id="IKVMCheck" onclick="vm_check()"  $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_IKVM)</script></span>
						<td><input type="text" name="IKVMPort" id="IKVMPort" $(TAG_DISABLE)/></td>
					</tr>
					<tr>
                        <td><input type="checkbox" name="VMCheck" id="VMCheck" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_VM)</script></span>
						<td><input type="text" name="VMPort" id="VMPort" $(TAG_DISABLE)/></td>
					</tr>
					<tr>
                        <td><input type="checkbox" name="SSHCheck" id="SSHCheck" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_SSH)</script></span>
						<td><input type="text" name="SSHPort" id="SSHPort" $(TAG_DISABLE)/></td>
					</tr>
					<tr>
                        <td><input type="checkbox" name="WsmanCheck" id="WsmanCheck" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_WSMAN)</script></span>
						<td><input type="text" name="WsmanPort" id="WsmanPort" $(TAG_DISABLE)/></td>
					</tr>
                    <tr>
                        <td><input type="checkbox" name="SNMPCheck" id="SNMPCheck" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_SNMP)</script></span>
                        <td><input type="text" name="SNMPPort" id="SNMPPort" $(TAG_DISABLE)/></td>
                    </tr>
					<tr>
                        <td><input type="checkbox" name="RedirectCheck" id="RedirectCheck" onclick="ssl_redirection_check()" $(TAG_DISABLE)/>
                        <span class="labelhead"><script>document.writeln(lang.LANG_CONF_PORT_REDIRECT)</script></span>
					</tr>
				</table>
				</form>
        	 	<br>
        	 	<input type="button" class="btnStyle" id="saveBtn" name="saveBtn" onclick="SavePortConfig()" $(TAG_DISABLE)/>
        	  	<!-- end of this area -->
        	  </td>
        </tr>
    </table>
</body>
</html>
